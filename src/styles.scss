// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@use './assets/sass/palette.scss' as palette;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
$my-custom-typography: mat.define-typography-config(
  $font-family: 'Open Sans',
  $headline: mat.define-typography-level(2rem, 1, 600),
  $title: mat.define-typography-level(1.9rem, 1, 600),
  $subheading-2: mat.define-typography-level(1.7rem, 1, 600),
  $subheading-1: mat.define-typography-level(1.4rem, 1, 600),
  $body-1: mat.define-typography-level(0.9rem, 1.4, 500),
  $body-2: mat.define-typography-level(0.9rem, 1.4, 600),
  $button: mat.define-typography-level(0.9rem, 1, 500),
);

@include mat.core($my-custom-typography);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$angular-template-primary: mat.define-palette(palette.$md-primary, 500);
$angular-template-accent: mat.define-palette(mat.$amber-palette, 600);
$angular-template-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$angular-template-theme: mat.define-light-theme((
  color: (
    primary: $angular-template-primary,
    accent: $angular-template-accent,
    warn: $angular-template-warn,
  )
));

// Custom buttons colors
$custom-colors: mat.define-palette(palette.$custom-colors);
$custom-colors-keys: map-remove(palette.$custom-colors, contrast);
@each $key in map-keys($custom-colors-keys) {
  .mat-flat-button,
  .mat-raised-button,
  .mat-fab,
  .mat-mini-fab {
    &.mat-#{$key} {
      background-color: map-get($custom-colors, $key);
      color: map-get($custom-colors, contrast, $key);
    }
  }
  .mat-button, .mat-stroked-button, .mat-icon-button {
    &.mat-#{$key} {
      color: map-get($custom-colors, $key);
    }
  }
  .bd-callout-#{$key}{
    border-left-color: map-get($custom-colors, $key) !important;
  }
  .card-header{
    &.mat-#{$key}{
      background-color: map-get($custom-colors, $key) !important;
      color: map-get($custom-colors, contrast, $key) !important;
    }
  }
}

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($angular-template-theme);

/////////////////////// BOOTSTRAP ///////////////////////////////
// Override
$primary: palette.$primary;
$secondary: palette.$secondary;
$success: palette.$success;
$info: palette.$info;
$warning: palette.$warning;
$danger: palette.$danger;
$light: palette.$light;
$dark: palette.$dark;

// Bootstrap imports
@import "../node_modules/bootstrap/scss/functions";
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/bootstrap-grid.scss";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/card";
@import "../node_modules/bootstrap/scss/alert";

html, body { height: 100%; }
body { margin: 0; }

h5 { font-size: 1.1rem !important; }
h6 { font-size: 1rem !important; }

.container {
  padding-bottom: 2rem;
  width: inherit;
}

.no-border {
  border: 0 !important;
}

/** OVERRIDE BOOTSTRAP **/
.breadcrumb-item+.breadcrumb-item::before {
	float: left;
	padding-right: .5rem;
	color: #6c757d;
	content: var(--bs-breadcrumb-divider, "/")
}

.breadcrumb-item.active {
	color: #6c757d
}

hr {
  border-top: 1px solid rgba(0,0,0,.1);
}

.border-bottom {
  border-bottom: 1px solid #dee2e6!important;
}

/* Text align */
.text-center {
  text-align: center!important;
}

.text-end {
  text-align: right!important;
}

/* bd-callout */
.bd-callout {
  margin-top: 1.25rem;
  margin-bottom: 1.25rem;
  border: 1px solid #eee;
  border-left-width: 0.2rem;
  border-radius: 0.25rem;
}

/* Card */
.card {
  border-radius: 40px !important;
  .card-body{
    padding: 1.5rem 2rem;
  }  
}

/** OVERRIDE ANGULAR **/
/* Input */
.mat-form-field {
  width: 100%;
}

.mat-form-field-subscript-wrapper {
  position: relative !important;
  padding-bottom: 0 !important;
}

/* Table */
th.mat-header-cell {
  border-bottom: 3px solid $warning !important;
}

table.mat-table {
  padding-right: 10px;
  padding-left: 10px;
}

.mat-row:hover .mat-cell {
  background-color: rgb(0 0 0 / 3%);
}

/** ANIMATIONS **/
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.animated-row {
  -webkit-animation-duration: 0.5s;
  animation-duration: 0.5s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
  animation-name: fadeIn;
}

.fast {
  -webkit-animation-duration: 0.4s;
  animation-duration: 0.4s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}